from ga import DeliveryOptimizer
from rand_data import generate_random_dataset
from huristic import heuristic_algorithm_1, heuristic_algorithm_2, heuristic_algorithm_3
from pickle_show import load_data_from_pickle,plot_data,ga_load_data_from_pickle
import pickle
"""자율연구.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12pADIB24-0UVvzbwLgIyrby4JpAOpdZc

데이터셋 (논문에 있는거)
"""


# Creating a pandas DataFrame using the data from the table
data = [
     [9, 9, 14, 8, 8, 1000, 1000, 1000, 1000, 1000, 1000],#0
    [1000, 14, 15, 6, 14, 8, 20, 11, 7, 11, 1000],#m1
    [14, 1000, 19, 6, 12, 11, 11, 11, 5, 9, 1000],#m2
    [15, 19, 1000, 6, 13, 7, 10, 13, 9, 17, 1000],#m3
    [6, 6, 6, 1000, 17, 7, 18, 17, 15, 16, 1000],#m4
    [14, 12, 13, 17, 1000, 12, 11, 16, 10, 6, 1000],#m5
    [1000, 11, 7, 7, 12, 1000, 6, 18, 16, 15, 0],#c1
    [20, 1000, 10, 18, 11, 6, 1000, 13, 14, 6, 0],#c2
    [11, 11, 1000, 17, 16, 18, 13, 1000, 15, 20, 0],#c3
    [7, 5, 9, 1000, 10, 16, 14, 15, 1000, 17, 0],#c4
    [11, 9, 17, 16, 1000, 15, 6, 20, 17, 1000, 0]#c5
]
#가로축은 'm1', 'm2', 'm3', 'm4', 'm5','c1', 'c2', 'c3', 'c4', 'c5','1'
nodes = ['0','m1', 'm2', 'm3', 'm4', 'm5','c1', 'c2', 'c3', 'c4', 'c5','1' ]
order=[ 0,60, 27,37,38,54]




# 데이터
size = 5
#nodes = ['0']+[f'm{i}' for i in range(1, size+1)]+[f'c{i}' for i in range(1, size+1)]+['1']
#order, data = generate_random_dataset(size)
print(*data, sep='\n')


# 휴리스틱
hu_results = []
hu_results.append(heuristic_algorithm_1(data, nodes, order, 65))
hu_results.append(heuristic_algorithm_2(data, nodes, order, 65))
hu_results.append(heuristic_algorithm_3(data, nodes, order, 65))
hu_file_path = "huristic_result.pickle"
with open(hu_file_path, "wb") as f:
    pickle.dump(hu_results, f)


# 전처리 for ga (?)
for row in data:
    row.append(0)
end_node_travel_times = [float('inf')]*11 + [0]  # 도착점에서 다른 노드로의 이동 시간
data.append(end_node_travel_times)


# ga
optimizer = DeliveryOptimizer(
    num_orders=size,
    profits=order,
    travel_times=data,
    max_time=65
)
best_chromosome, best_fitness = optimizer.run(generations=1000)

print("\n최적의 주문 순서:", best_chromosome)
print("최고 수익:", best_fitness)
data_path = "data_result.pickle"
with open(data_path, "wb") as f:
    pickle.dump(data, f)


# 데이터 불러오기 및 그래프 그리기
ga_file_path = 'ga_result.pickle'
ga_results = ga_load_data_from_pickle(ga_file_path)
hu_results = load_data_from_pickle(hu_file_path)
plot_data(ga_results, hu_results)
